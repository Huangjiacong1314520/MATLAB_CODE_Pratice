clc
clear

%矩阵：英文中括号[]，行内空格/逗号，行间分号
%矩阵相乘
A=[1 4;8 0;-1 3]
B=[-1 7 4;2 1 -2]
C=A*B

%数组相乘，需要行列数完全相同.*
D=[12 3;-1 6]
E=[4 2;9 1]
F=D.*E


%矩阵转置单引号'   复数矩阵转置会自动计算其共轭值   如果要转置但不计算共轭值，使用.'
G1=F'
G2=F.'

%把向量/矩阵合并创造新向量/矩阵
H=[D;E]
I=[D,E]

%最大/最小值
J=max(A)
K=min(B)

%向量的叉乘（必须是三维向量）
L=[1 2 3]
M=[2 3 4]
N=cross(L,M)

%计算共轭复数conj()  计算平方根sqrt()
%向量的点乘
%向量的模
a=[1;4;7]
b=[-i;1+i;4+4*i]%复数要带乘号
c=dot(a,b)
d=dot(b,b)
mag1=sqrt(dot(a,a))%求模
mag2=sqrt(dot(b,b))%含有复数的向量求模？这个是对的吗？

%创造等差元素向量/矩阵
%方式1    [第一个元素:相邻元素之间的差值:最后一个元素]，如果首尾边界达不到，就只创造边界内的元素
x=[0:3:10]
%方式2    linspace命令   linspace(a,b,n)创建a和b之间n个等差元素
%方式3    logspace命令   logspace(a,b,n)创建10^a和10^b之间n个对数值等差的向量，10 100 1000
%可以用于创造函数在某些点的一系列值，e指数函数，乘方
y=exp(x)
z=x.^2

%% 特殊类型矩阵
%单位矩阵   主对角线全为1，其他全为0
eye(4)
%零矩阵
zeros(m,n)
%全1矩阵
ones(m,n)



%% 引用矩阵元素，并对元素/行列进行修改或删除，行列中间用英文逗号连接
A(2,1);
%改变引用矩阵的值
A(2,1)=-8;
%引用第i列所有元素，行用:代替     A(:,i);
A(:,1);
%引用第i列到第j列所有元素，行用:代替     A(:,i:j);
A(:,1:2);
%还可以选出块状矩阵     A(a:b;i:j)
A(1:2,1:2);
%在右式的方括号里留空，用来删除矩阵的行和列
A(2,:)=[];
%引用矩阵中的行或列来创建新的矩阵,引用两次A的第一行，一次第二行
A=[-8,2,3;7,8,9];
E=A([1,2,1],:);
%则E=[-8,2,3;7,8,9;-8,2,3];



%% 行列式与线性方程组的解
A=[5 2 -9; -9 -2 2; 6 7 3];
%计算行列式，用于判断线性方程组是否有解，系数矩阵A的行列式不为0，则解存在
det(A);
%求解：令方程组右边组成的向量为b，用A左除b
b=[-18;-7;29];
ANS=A\b



%% 求矩阵的秩和逆



















